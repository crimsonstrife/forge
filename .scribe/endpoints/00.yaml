name: Endpoints
description: ""
endpoints:
  - httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: api/webhooks/github
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      summary:
        name: summary
        description: "Must be at least 4 characters. Must not be greater than 200 characters."
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: "Must be at least 10 characters. Must not be greater than 8000 characters."
        required: true
        example: "Et animi quos velit et fugiat."
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      service_product_id:
        name: service_product_id
        description: "The <code>id</code> of an existing record in the service_products table."
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "Must be a valid email address. Must not be greater than 255 characters."
        required: false
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      player_id:
        name: player_id
        description: "Must not be greater than 255 characters."
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      build:
        name: build
        description: "Must not be greater than 64 characters."
        required: false
        example: "y"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      platform:
        name: platform
        description: "Must not be greater than 32 characters."
        required: false
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      severity:
        name: severity
        description: ""
        required: false
        example: minor
        type: string
        enumValues:
          - trivial
          - minor
          - major
          - critical
        exampleWasSpecified: false
        nullable: true
        custom: []
      metadata:
        name: metadata
        description: ""
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      attachments:
        name: attachments
        description: "Must be a file. Must not be greater than 10240 kilobytes."
        required: false
        example:
          - null
        type: "file[]"
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      summary: b
      description: "Et animi quos velit et fugiat."
      service_product_id: architecto
      email: zbailey@example.net
      player_id: i
      build: "y"
      platform: v
      severity: minor
    fileParameters:
      attachments:
        - null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/me
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/projects
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: "api/v1/projects/{id}"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the project."
        required: true
        example: 6dbe929c-6f1f-47df-bc3c-b4ea3d0d55f6
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 6dbe929c-6f1f-47df-bc3c-b4ea3d0d55f6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/lookups
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/issues
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: api/v1/issues
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: "Must be a valid UUID. The <code>id</code> of an existing record in the projects table."
        required: true
        example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      summary:
        name: summary
        description: "Must not be greater than 255 characters."
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ""
        required: false
        example: "Eius et animi quos velit et."
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      issue_type_id:
        name: issue_type_id
        description: "The <code>id</code> of an existing record in the issue_types table."
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      issue_priority_id:
        name: issue_priority_id
        description: "The <code>id</code> of an existing record in the issue_priorities table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      issue_status_id:
        name: issue_status_id
        description: "The <code>id</code> of an existing record in the issue_statuses table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      assignee_id:
        name: assignee_id
        description: "Must be a valid UUID. The <code>id</code> of an existing record in the users table."
        required: false
        example: a4855dc5-0acb-33c3-b921-f4291f719ca0
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      parent_id:
        name: parent_id
        description: "Must be a valid UUID. The <code>id</code> of an existing record in the issues table."
        required: false
        example: c90237e9-ced5-3af6-88ea-84aeaa148878
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tags:
        name: tags
        description: ""
        required: false
        example:
          - architecto
        type: "string[]"
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      project_id: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
      summary: g
      description: "Eius et animi quos velit et."
      issue_type_id: 16
      issue_priority_id: 16
      issue_status_id: 16
      assignee_id: a4855dc5-0acb-33c3-b921-f4291f719ca0
      parent_id: c90237e9-ced5-3af6-88ea-84aeaa148878
      tags:
        - architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: "api/v1/issues/{id}"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - PUT
    uri: "api/v1/issues/{id}"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      summary:
        name: summary
        description: "Must not be greater than 255 characters."
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ""
        required: false
        example: "Eius et animi quos velit et."
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      issue_type_id:
        name: issue_type_id
        description: "The <code>id</code> of an existing record in the issue_types table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      issue_priority_id:
        name: issue_priority_id
        description: "The <code>id</code> of an existing record in the issue_priorities table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      issue_status_id:
        name: issue_status_id
        description: "The <code>id</code> of an existing record in the issue_statuses table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assignee_id:
        name: assignee_id
        description: "Must be a valid UUID. The <code>id</code> of an existing record in the users table."
        required: false
        example: a4855dc5-0acb-33c3-b921-f4291f719ca0
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      parent_id:
        name: parent_id
        description: "Must be a valid UUID. The <code>id</code> of an existing record in the issues table."
        required: false
        example: c90237e9-ced5-3af6-88ea-84aeaa148878
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tags:
        name: tags
        description: ""
        required: false
        example:
          - architecto
        type: "string[]"
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      summary: b
      description: "Eius et animi quos velit et."
      issue_type_id: 16
      issue_priority_id: 16
      issue_status_id: 16
      assignee_id: a4855dc5-0acb-33c3-b921-f4291f719ca0
      parent_id: c90237e9-ced5-3af6-88ea-84aeaa148878
      tags:
        - architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/transition"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      to_status_id:
        name: to_status_id
        description: "The <code>id</code> of an existing record in the issue_statuses table."
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      to_status_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/comments"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: "Must not be greater than 65000 characters."
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/attachments"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: ""
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: "Must be a file. Must not be greater than 10240 kilobytes."
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: "api/v1/issues/{issue_id}/time/summary"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: "GET /api/v1/issues/{issue:id}/time/summary"
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: "no-cache, private"
          content-type: application/json
          access-control-allow-origin: "*"
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/time/start"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: |-
        POST /api/v1/issues/{issue:id}/time/start
        Starts a running timer for the authenticated user.
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/time/stop"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: |-
        POST /api/v1/issues/{issue:id}/time/stop
        Stops the current running timer for the authenticated user.
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - POST
    uri: "api/v1/issues/{issue_id}/time"
    metadata:
      groupName: Endpoints
      groupDescription: ""
      subgroup: ""
      subgroupDescription: ""
      title: |-
        POST /api/v1/issues/{issue:id}/time
        Manual log: accepts either {seconds} or {started_at, ended_at}, plus optional note.
      description: ""
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      issue_id:
        name: issue_id
        description: "The ID of the issue."
        required: true
        example: OMP-1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      issue_id: OMP-1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      started_at:
        name: started_at
        description: "Must be a valid date."
        required: true
        example: "2025-09-19T15:54:45"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ended_at:
        name: ended_at
        description: "Must be a valid date. Must be a date after <code>started_at</code>."
        required: true
        example: "2051-10-13"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      note:
        name: note
        description: "Must not be greater than 2000 characters."
        required: false
        example: "n"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      started_at: "2025-09-19T15:54:45"
      ended_at: "2051-10-13"
      note: "n"
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
